{"categories":[{"title":"CAD","uri":"https://icsteve.com/en/categories/cad/"},{"title":"English","uri":"https://icsteve.com/en/categories/english/"},{"title":"HMC","uri":"https://icsteve.com/en/categories/hmc/"},{"title":"Notion","uri":"https://icsteve.com/en/categories/notion/"},{"title":"RUI","uri":"https://icsteve.com/en/categories/rui/"}],"posts":[{"content":"Welcome to ICSteve Knowledge Planet (https://t.zsxq.com/eqr72RB), the category is streamlined into two types, the first category is actual tools and skills sharing, and the second category is the post with my personal thoughts and opinions.\nCAD | Workmanship  How to save the contents in the current vim register to a script?  qp \u0026lt;leader\u0026gt;\u0026lt;register name\u0026gt;p ``` 2. A collection of vim plugins, if you are a vim user, you may want to browse this website. - [Vim Awesome](https://vimawesome.com/) 3. Vim could search match multiple patterns, use `\\` to escape `|`. ``` :norm /Pattern1\\|Pattern2 ``` 4. Python is mostly used for front-end design, recently I have time to start paying attention to python + VLSI, I wonder if anyone is using this? - [MyHDL](http://www.myhdl.org/) 5. \u0026quot;direnv\u0026quot; is a tool that can switch work env. It is very convenient to use. Many programming languages have their own env management tool, for instance, python has conda. - [direnv - unclutter your .profile | direnv](https://direnv.net/) - [conda - conda 4.9.2.post24 e37cf84a documentation](https://docs.conda.io/projects/conda/en/latest/) 6. There are many commercial tools available to assist you in designing constraints, checking constraints, comparing constraints, and products that I will not list. As CAD engineer, you can go play around with \u0026quot;sdcparser\u0026quot;. 7. IP management: Very often, if you are a front-end and back-end module designer, when you start working, the std library, ip library, etc. are already ready, and all the required views are ready to use. one of CAD's jobs is to manage these IPs and generate the entire One of the jobs of CAD is to manage these IPs and generate the views needed for the entire ASIC process, and to make sure that the IPs are legal at the time of tapeout. When you run EDA job, the screen is scrolling fast, maybe you already know that you can use \u0026quot;Ctrl+s\u0026quot; to freeze a terminal window, and \u0026quot;Ctrl+q\u0026quot; when you need to resume. 9. which \u0026quot;naming style\u0026quot; do you usually use more? - Camel Case (ex: aprVar, aprProc, aprPackage). - Pascal Case (ex: AprVar, AprProc, AprPackage). - Underscores (ex: apr_var, apr_proc, apr_package). 10. Normally, if you want to search the stdout log of Terminal on the screen, you should use tee and look at the log file of eda directly. tmux can search directly, enter copy-mode, press ctrl-b first and then [ , if it is vi key binding, you can use `/` or `?` If it is a vi key binding, you can use / or ? 11. If you like to use Markdown to write technical documents, try \u0026quot;docsify\u0026quot;. - [docsify](https://docsify.js.org/) 12. Long time ago when browsing Reddit, I found this, this is actually very useful, can be used as a CAD learning practice. - [EDAV | Online EDA Viewer](https://edaviewer.com/) 13. Sometimes there is a window unresponsive on Unix X desktop, ps or top may have too many other similar programs, such as many terminals, then you can run \u0026quot;xkill\u0026quot; and use the mouse to click the unresponsive window. 14. As a CAD, development company, team process, development of some Utilities, Program, Platform, version management is very important, many companies use git, maintained by the company IT, or commercial tools to pay for technical support. As a CAD, you must have a strong sense of versioning, maintain your own check-in, use git to manage your process scripts, try \u0026quot;gogs\u0026quot;, which is what I used for myself at the beginning, to practice how to manage a large code versioning, resolve dependencies, and write scripts to assist in releasing, etc. - [Gogs: A painless self-hosted Git service](https://gogs.io/) 15. sometimes you want to combine several commands, there are several ways to do this. tcl is a good glue language, or other scripting languages, both of which are also convenient without compiling, and another option is to just use the csh alias command, other shells like that. Here comes the point, you can use \u0026quot;! *\u0026quot;, \u0026quot;! :\u0026lt;num\u0026gt;\u0026quot; to access command parameters. ``` alias mycmd \u0026quot;echo \\! * ;\\\\\\ echo this is a long command \\! :1 ; \\\\\\ echo this is a very long command \\! :2 ;\u0026quot; ``` 16. If you are not so familiar with databases, and struggle to get started, in writing script and want to use databases, or datasets: to solve the problem of the beginning of everything, use \u0026quot;csv\u0026quot; and slowly learn more about it, this is also a more than good just, is a very good dataset format, in In some cases and is preferred. 17. 17. Many times we use the \u0026quot;tee\u0026quot; command to write screen logs, multiple commands are not to use multiple tee and then cat together? No, tee also has append function, use \u0026quot;tee -a\u0026quot;. 18. 18. Many times you have to use pipe + tee to write cshell scripts, it is very convenient to use \u0026quot;. /foo | tee foo.log\u0026quot;, this only write out stdout, not srderr, need to debug when the error message in the foo.log is not, should be written as such ``` . /foo 2\u0026gt;\u0026amp;1 | tee foo.log Or . /foo |\u0026amp; tee foo.log ``` ## CAD | Opinions ### 1. IC or CS The first thing you need to do is to make sure that you have a good idea of what you want to do. If you are interested in IC, IC still have to do, as long as the industry does not disappear, there is still a demand for manpower; Speaking of CS is not more promising, my personal view is yes, the largest industry in the information age may be the software industry, but note that any industry positions have a bottom and top, CS so, IC is no exception. ### 2. Another reason to learn Tcl A motivation to learn tcl: Many scripting languages support tk GUI programming, so by learning tcl/tk, you learn a GUI language, plus tcl is almost the most important Interface language for IC. ### 3. Copyright awareness I see a lot of good sharing, but every time I see something, my first question is really, can this be used to spread? As my own notes may not be a problem, I gave up some expertise on the entry point to share, and instead share general knowledge, I see many articles to share is no problem, but need to pay attention to: how you protect the intellectual property rights of others today, tomorrow others will also respect your intellectual property rights. ### 4. CAD skill tree - PDK CAD skill tree: master the structure of the PDK and the role of each file, and be familiar with how to use each file. As a CAD engineer, you are often dealing with data, one of which is the PDK provided by foundry, called Process Design Kit, which is a modeling of a specific semiconductor manufacturing process, using the model provided in the PDK, together with the purchased EDA, you can design the chip, including but not limited to: technology file, design rule, spice... CAD skill tree: master the structure of PDK and the role of each file, and be familiar with how to use each file. ### 5. Timing Uncertainty (1 \u0026amp; 2) Q: What is the purpose of setting timing uncertainty in chip design constraints? How do I set it? Answer: When I first came into contact with constraints, I was doing Logical Synthesis and STA, at that time it was still 65nm, the constraints were not that complicated, and the experience value was good. After more and more exposure, from STA, APR to CAD, my thoughts are changing. As an overview, uncertainty setting, as the name suggests, is used to cover the entire process of uncertainty, different stages need to consider different uncertainty, generally for the downstream work to reserve the timing space. We are going to give examples from back to front, first STA timing signoff settings from the foundry process uncertainty, generally process manufacturers for the process line to do debugging, such as ocv. also include different products back to some of the experience of the actual test, the product on the yield, DFT test, work environment, aging and a series of product itself The product's own considerations. Of course, STA has many other factors that may affect the uncertainty setting, such as the accuracy of STA, PBA vs GBA, the margin reserved for SI or transition, etc. The next step is Routing, the more the previous step requires a certainty that includes the value of the subsequent steps plus some of the issues that need to be considered in this step, the routing uncertainty mainly covers the gap between global routing and real routing. EDA tools are constantly improving the accuracy of virtual routing and narrowing the gap between it and real routing. Specifically on more (not considering detour or congestion and other issues triggered by the large delay), to give an example of a little off, due to routing after the impact on the path delay more virtual will have longer or shorter, plus ocv, this value in several iteration can be estimated out, one of the empirical values. To be continued ### 6. The scoping ability on the development Recently, I found that some CAD engineers are not open to the understanding of resources, most of the time human resources are far more than hardware resources, in addition to finding the right people, before at least to their own work related to the upstream and downstream dependency to reach the level of use, I see many people only stay in the level of know (know), the reason behind is to use you to better The reason behind this is that once you use it, you can ask questions and communicate better. From the CAD work, I think in familiar (familiar) and master (master) before there is a skill to go deeper guide (guidance), here the guidance is not to go to the fingertips, but you know what he should be like, a kind of control of the expected, more in-depth, if there is a mistake, you can know what causes it. ### 7. My opinion of the very basics of IC I asked an interactive question earlier, what do you think is the most important basic skill for IC, whether front-end, back-end, or CAD? My answer is Timing, because in my opinion, it is the most basic thing to achieve the function, and it is also a hurdle for hardware to differentiate software development, there is a lot of knowledge around timing. I use an analogy, to achieve the IC knowledge of food and clothing, Timing to understand, and then well-off can look at Power or something, wealthy to another methodology, High Performance, Low Power, etc.. ### 8. GameStop GameStop's big game is wonderful, the power of social media is constantly put  ","id":0,"section":"posts","summary":"Welcome to ICSteve Knowledge Planet (https://t.zsxq.com/eqr72RB), the category is streamlined into two types, the first category is actual tools and skills sharing, and the second category is the post with my personal thoughts and opinions. CAD | Workmanship How to save the contents in the current vim register to a script? qp \u0026lt;leader\u0026gt;\u0026lt;register name\u0026gt;p ``` 2. A collection of vim plugins, if you are a vim user, you may want","tags":null,"title":"ICSteve Half Moon Collection (2021.01-B)","uri":"https://icsteve.com/en/2021/01/icsteve_hmc_2020_01_b/","year":"2021"},{"content":"Welcome to follow ICSteve Knowledge Planet (https://t.zsxq.com/eqr72RB). The Half Moon Collection is a half-monthly collection of tweets from the planet, published twice a month. Join the planet to see more interactive discussions, ask questions to the star owners, and get actual hands-on sharing and reviews.\nCAD | Workmanship   started using Notion, shared some tips on using Notion and built some templates. Wrote the first share: Using Notion to collect ideas\n  Hugo built the website http://icsteve.com Transformed the existing template to bilingual support.\n  set up a project cshinate to build a collection of cshell best practices. Serialized first, second: Csh Options Using tree command to show file structure\n  Vim can use q to record macro to register, and then use @ to call the contents of the register. I will post a share on using Vim with Macro efficiently in IC work environment.\n  Think about how many times a day you need to type in a password or other fixed code for Server work, and if it\u0026rsquo;s more than 0, learn about expect, a tcl library that handles interactions.\n  how to print or process json in a terminal or shell script, when using the tool jq, the use is not only in displaying json, but also how to use json as a data source glued together with jq, is doing cshinate (csh best practices collection) interface json tool is jq, empower json on The tool for enabling json is jq, which needs to be used just right.\n  some sh scripts contain sensitive information, need to encrypt, the threshold of specialized tools is too high? Try gzexe, can prevent the gentleman, not to prevent the villain.\n  periodic work can be given to the Crontab to do, if there is no permission to build crontab it, tmux and while with run a resident system script. In order to prevent the system kill, you may need to set up a regular reboot.\n  it turns out that git can also set internal alias, mainly by using the \u0026ldquo;git config \u0026ndash;global alia\u0026rdquo;, which is useful, but I think it is not as flexible as shell alias, such as alias gitci \u0026ldquo;git add . ; git commit -am ! * git push\u0026rdquo;.\n  Sometimes you want to do tests, sometimes you want to control another terminal from a terminal, how to achieve it, start using tmux it, Tmux can also do the same screen demo.\n  manually enter zoom meeting ID and Password is too time-consuming, this small tool can generate the URL of the computer and mobile, save a lot of time there 😉 https://www.skyzh.dev/zoom-url-generator/\n  usually with grep may not be much with parameters, in fact, many parameters are very good to use, such as\n n show line number -A 5 shows the context, after 5 lines -B 5 shows the context, before 5 lines -C 5 shows the context, both before and after 5 lines    CAD | Accumulation  Google Open Source PDK: https://github.com/google/skywater-pdk know the format TOML: https://github.com/toml-lang/toml https://www.maxar.com/ companies and their products to learn more. The future is data-driven, and CAD is a data-driven Interface. open source synthesis tool https://github.com/YosysHQ/yosys open source timing analysis tool https://github.com/OpenTimer/OpenTimer this site should be ASIC design front-end students know a lot about a site, right, ready to brush up on this site, I also want to build a digital back-end implementation and CAD of similar sites. http://hdlbits.01xz.net  CAD | Advanced 1. how to \u0026ldquo;pretend\u0026rdquo; to know the tool like the back of your hand Read the Datasheet, Command Reference and create your own Test Case a few times, practice more, you are a living tool manual, read more things, your realm will be upgraded by quality, dare to insist on trying?\n2. smooth remote presentation Tips Now telecommuting, teleconferencing more and more frequently, when you are showing PPT or proposal, how to look smooth?\n adjust the color to light background (white or light green), adjust xterm to light green background, black text adjust the font size, now the high-division screen is more and more common, to ensure that there is a relatively large font, even when the network is not good will not have much impact delete the animation, if not marketing-related presentation open the file to show the line number by default, to facilitate communication the font size of the file I want to enlarge compared to the usual work of their own good use of tmux management terminal window good use of tree and other commands to show the file structure good use of meld, tkdiff, gitdiff and other tools to compare files  3. discussion can be active thinking What do you think are the more fundamental skills in each subfield of digital chip design, be it digital front-end, digital back-end or CAD?\nCAD | Opinions 1. CAD and overtime Overtime\u0026rsquo;s exist in any industry, construction workers build hospitals in a few days, software Release phase overtime, hardware Tapeout final to sprint. If things could be parallel, wouldn\u0026rsquo;t there be no need for overtime? Not really. When things are parallel, the cost of resources consumed for the same goal is increased, and under certain conditions (overtime), the cost is lowest. The goal of ICCAD is to increase efficiency, and in some cases with the help of CAD, touch the fish and reduce the intensity of your own work. ICCAD also has the advantage that CAD can dabble in more areas, strengthening its moat and enhancing its indispensability.\n2. Using APIs is a basic CAD skill No matter what framework or system is becoming more and more closed, and with open source systems like Android, users get a hundred flowers, each with good and bad effects. So what can CAD cope with? The data interface will become more and more open, and the ability to access data is a basic skill of CAD.\n3. What ICSteve will share There are many ways to share and export the summary knowledge of CAD and IC alone. After years of working with CAD, I have found that there are several types of capabilities that can significantly improve a designer\u0026rsquo;s productivity and experience.\nContinuous optimization of the development environment Modularization of basic knowledge, instantiation, data, and tools\nKnowledge is a treasure but practice is the key\n4. CAD and Software Development If you want to take CAD further, my suggestion is to do both upward and downward management, going upward through the architecture and participating in CAD decisions at the management level, and going downward to understand the organization and bottlenecks of hardware projects and provide solutions.\n5. Chip design in the cloud The key is the word \u0026ldquo;save\u0026rdquo;, either save time, shorten Time to Market, or save cost, reduce the cost increase brought by peak usage. After the cloud, the right to use the data, whether your design will become a sample to be learned and other issues need to be considered. On the cloud may be some positions will be reduced, there are also some positions will be added, such as cloud data interaction (learn some container technology, network technology always overflow).\n","id":1,"section":"posts","summary":"Welcome to follow ICSteve Knowledge Planet (https://t.zsxq.com/eqr72RB). The Half Moon Collection is a half-monthly collection of tweets from the planet, published twice a month. Join the planet to see more interactive discussions, ask questions to the star owners, and get actual hands-on sharing and reviews. CAD | Workmanship started using Notion, shared some tips on using Notion and built some templates. Wrote the first share: Using Notion to collect ideas","tags":null,"title":"ICSteve Half Moon Collection (2021.01-A)","uri":"https://icsteve.com/en/2021/01/icsteve_hmc_2020_01_a/","year":"2021"},{"content":"tree command is helping to show the structure of folders and files.\nReal Case When discussing the folder structure via video meeting, express the structure is a little bit challenge if we have a lot of levels and files. How to make the folder and file structure clear when we present something?\n. means in current dir. and we can use pwd to replace it.\n➜ tree -a --dirsfirst . ├── test -\u0026gt; test_3 ├── test_1 │ └── file_1 ├── test_2 │ └── file_2 ├── test_3 │ └── file_3 └── .conf 4 directories, 4 files ➜ tree `pwd` -a --dirsfirst /Users/steve/demo ├── test -\u0026gt; test_3 ├── test_1 │ └── file_1 ├── test_2 │ └── file_2 ├── test_3 │ └── file_3 └── .conf 4 directories, 4 files  Understand Let\u0026rsquo;s first see the tree command help:\n➜ ~ tree --help usage: tree [-acdfghilnpqrstuvxACDFJQNSUX] [-H baseHREF] [-T title ] [-L level [-R]] [-P pattern] [-I pattern] [-o filename] [--version] [--help] [--inodes] [--device] [--noreport] [--nolinks] [--dirsfirst] [--charset charset] [--filelimit[=]#] [--si] [--timefmt[=]\u0026lt;f\u0026gt;] [--sort[=]\u0026lt;name\u0026gt;] [--matchdirs] [--ignore-case] [--fromfile] [--] [\u0026lt;directory list\u0026gt;] ------- Listing options ------- -a All files are listed. -d List directories only. -l Follow symbolic links like directories. -f Print the full path prefix for each file. -x Stay on current filesystem only. -L level Descend only level directories deep. -R Rerun tree when max dir level reached. -P pattern List only those files that match the pattern given. -I pattern Do not list files that match the given pattern. --ignore-case Ignore case when pattern matching. --matchdirs Include directory names in -P pattern matching. --noreport Turn off file/directory count at end of tree listing. --charset X Use charset X for terminal/HTML and indentation line output. --filelimit # Do not descend dirs with more than # files in them. --timefmt \u0026lt;f\u0026gt; Print and format time according to the format \u0026lt;f\u0026gt;. -o filename Output to file instead of stdout. ------- File options ------- -q Print non-printable characters as '?'. -N Print non-printable characters as is. -Q Quote filenames with double quotes. -p Print the protections for each file. -u Displays file owner or UID number. -g Displays file group owner or GID number. -s Print the size in bytes of each file. -h Print the size in a more human readable way. --si Like -h, but use in SI units (powers of 1000). -D Print the date of last modification or (-c) status change. -F Appends '/', '=', '*', '@', '|' or '\u0026gt;' as per ls -F. --inodes Print inode number of each file. --device Print device ID number to which each file belongs. ------- Sorting options ------- -v Sort files alphanumerically by version. -t Sort files by last modification time. -c Sort files by last status change time. -U Leave files unsorted. -r Reverse the order of the sort. --dirsfirst List directories before files (-U disables). --sort X Select sort: name,version,size,mtime,ctime. ------- Graphics options ------- -i Don't print indentation lines. -A Print ANSI lines graphic indentation lines. -S Print with CP437 (console) graphics indentation lines. -n Turn colorization off always (-C overrides). -C Turn colorization on always. ------- XML/HTML/JSON options ------- -X Prints out an XML representation of the tree. -J Prints out an JSON representation of the tree. -H baseHREF Prints out HTML format with baseHREF as top directory. -T string Replace the default HTML title and H1 header with string. --nolinks Turn off hyperlinks in HTML output. ------- Input options ------- --fromfile Reads paths from files (.=stdin) ------- Miscellaneous options ------- --version Print version and exit. --help Print usage and this help message and exit. -- Options processing terminator.  I will show some flags\u0026rsquo; usage which I am using a lot. The options are very similar to the ls command.\n-a, list all the files including the hidden files. In the CAD development, some files are for debugging purpose or for one-time configuration, and they are hidden. To list the hidden files, -a must be present.\n-d, only list the folder, In some cases, the file list is huge but we only care about the folder structure. The folder will tell the clear structure\n-L, controls the levels, sometimes, I don\u0026rsquo;t want to dive into all the folder levels and I only want to show 2 levels, then use -L 2.\n-t, sort by last modified time. The flag is useful because when we want to see some new files generated recently, we can easily find them at the end of the tree view.\nAnother useful function is HTML or JSON output. In these days, HTML document is very popular and we can use tree to output the html code or json file to use them in our web applications.\nImprovement or Exercises Please try below commands and see the output.\nmkdir tree_demo cd tree_demo mkdir -p demo_1 demo_2 demo_3 demo_4 demo_5 touch demo_1/file_1 demo_2/file_2_1 demo_2/file_2_2 demo_3/file_3 demo_5/file_5 touch .demo_6 tree `pwd` tree `pwd` -a tree `pwd` -a --dirsfirst touch demo_2/file_2_2 tree `pwd` -a -t --dirsfirst tree `pwd` -a -t -L 1 --dirsfirst tree `pwd` -a -t -d -L 1 --dirsfirst  ","id":2,"section":"posts","summary":"tree command is helping to show the structure of folders and files.\nReal Case When discussing the folder structure via video meeting, express the structure is a little bit challenge if we have a lot of levels and files. How to make the folder and file structure clear when we present something?\n. means in current dir. and we can use pwd to replace it.\n➜ tree -a --dirsfirst . ├── test -\u0026gt; test_3 ├── test_1 │ └── file_1 ├── test_2 │ └── file_2 ├── test_3 │ └── file_3 └── .","tags":["RUI","csh","tree"],"title":"Use tree command to list the structure","uri":"https://icsteve.com/en/2021/01/tree_command/","year":"2021"},{"content":"This is a website to help on the English pronunciation.\nYouglish : https://youglish.com\nThe website will pick a lot of youtube videos which includes the words we searched. You will see it shows up 1951 videos and now is currently playing the 4th one.\nThis is quite useful because not like the dictionary, the video will not only tell you how the word is pronounced, but also tell you when it is used via video, not just a sentence. So if you are interested, you can finish the entire story.\nEspecially for a lot of technical and other domains\u0026rsquo; words, you can always find the proper conversation and scenario in youtube. It is a very good material to help you memory the word and its pronunciation.\n","id":3,"section":"posts","summary":"This is a website to help on the English pronunciation.\nYouglish : https://youglish.com\nThe website will pick a lot of youtube videos which includes the words we searched. You will see it shows up 1951 videos and now is currently playing the 4th one.\nThis is quite useful because not like the dictionary, the video will not only tell you how the word is pronounced, but also tell you when it is used via video, not just a sentence.","tags":["english","youtube"],"title":"English pronunciation helper: youglish.com","uri":"https://icsteve.com/en/2020/12/youglish/","year":"2020"},{"content":"Case Study There is a cshell script file which is working in others\u0026rsquo; environment but not in yours, one of prossibilities is that the cshell will load the unit cshell file ~/.cshrc( cshrc). So there might be some setting in others\u0026rsquo; .cshrc files, but not in yours.\nUnderstand In Unix-like system, when you want to get the help of one program from Command Line Interface (CLI), we can try the following ways, like csh.\n man csh csh \u0026ndash;help  ➜ ~ csh --help tcsh 6.18.01 (Astron) 2012-02-14 (x86_64-apple-darwin) options wide,nls,dl,bye,al,kan,sm,rh,color,filec -b file\tbatch mode, read and execute commands from `file' -c command\trun `command' from next argument -d\tload directory stack from `~/.cshdirs' -Dname[=value]\tdefine environment variable `name' to `value' (DomainOS only) -e\texit on any error -f\tstart faster by ignoring the start-up file -F\tuse fork() instead of vfork() when spawning (ConvexOS only) -i\tinteractive, even when input is not from a terminal -l\tact as a login shell, must be the only option specified -m\tload the start-up file, whether or not owned by effective user -n file\tno execute mode, just check syntax of the following `file' -q\taccept SIGQUIT for running under a debugger -s\tread commands from standard input -t\tread one line from standard input -v\techo commands after history substitution -V\tlike -v but including commands read from the start-up file -x\techo commands immediately before execution -X\tlike -x but including commands read from the start-up file --help\tprint this message and exit --version\tprint the version shell variable and exit See the tcsh(1) manual page for detailed information.  If you are looking for parameter instead of argument, go to this page parameter.\nSometimes, we will see a cshell script which starts with /usr/bin/env csh -fx, this means using csh to execute, and when launching csh, ignore the start-up file (cshrc) and always print out the command before execution.\nIf cshell is not the default shell, launch the cshell by typing csh (in case cshell is not installed, we can install csh quit easily in most of platforms - google install csh).\nIf we want to write a Cabell executable file, here is the example:\n#!/usr/bin/env tcsh echo \u0026quot;This is my first csh example\u0026quot; ; exit ;  Save the content into a file named demo_001.csh.\nRun the following commands:\nchmod +x demo_001.csh ./demo_001.csh  The first line of an executable file starting with #! is (on Linux) interpreted by the Linux kernel inside the implementation of execve system call (which is invoked, after fork, by the shell for most commands - those that are not functions and not shell builtins).\nAbout \u0026ldquo;Hash-Bang\u0026rdquo; or \u0026ldquo;Shebang\u0026rdquo;, refer to this wiki page - SheBang (Unix).\nExercises  Get the help of csh on your own machine. Check the version of csh. Write a csh program file and print out \u0026ldquo;Hello World\u0026rdquo;.  Links  Google Search: csh install Wiki Page: Shebang (Unix) Knowledge Link: cshrc  ","id":4,"section":"posts","summary":"Case Study There is a cshell script file which is working in others\u0026rsquo; environment but not in yours, one of prossibilities is that the cshell will load the unit cshell file ~/.cshrc( cshrc). So there might be some setting in others\u0026rsquo; .cshrc files, but not in yours.\nUnderstand In Unix-like system, when you want to get the help of one program from Command Line Interface (CLI), we can try the following ways, like csh.","tags":null,"title":"Csh Argument","uri":"https://icsteve.com/en/2020/12/csh_argument/","year":"2020"},{"content":"I have tried many different tools to organize the information collected online. The services like raindrop.io, App List, cubox, etc. They all have their own use cases and scenarios. And Cubox can support tags, date, sort, and other more functions. Comparing to these apps, Notion is a good replacement which can serve the collection very well.\nResult This is the view for my current inbox (Table View). The links are added to the inbox by sharing function from my iPhone when I browse the technical articles or news. And they are also from my EDGE browser on MAC or PC. When I browse online for news or technical topic, or work related items, I will simply click share the link and put them to the Notion/Inbox.\nThe table in Notion is a type of database, so we can add any column we want. I added one checkbox column called \u0026ldquo;To Obsidian\u0026rdquo; (Check Notion and Obsidian), tags and create date. At the bottom, for each column, we can also define the summary for each column.\nSwitch to Gallery View\nUnderstand Now let\u0026rsquo;s try to build the Inbox page in your Notion. In the Inbox or Collection, you can put anything you want, an article link, an apple store app link, a piece of idea, a text message, and so on. This is easy to be done by just click the share button on the smart phone. Since we are building a read later database, so we can put any property we want to each item. I have uninstalled several apps in my iPhone, what about you?\nCreate a new page Click the \u0026ldquo;+\u0026rdquo; button next to the WORKSPACE or PRIVATE. And then give the new page a name, for instance, \u0026ldquo;Inbox\u0026rdquo; or \u0026ldquo;Collection\u0026rdquo;.\nAdd \u0026ldquo;Table\u0026rdquo; database Create a table for the new page\nThen you will get an empty page like this.\nCustomize Columns Now, we can define the columns in our collection table. I want to add 2 more columns, one is \u0026ldquo;To Obsidian\u0026rdquo; and another one is \u0026ldquo;Create Date\u0026rdquo;.\n\u0026ldquo;To Obsidian\u0026rdquo; is a checkbox to tell which would be going to the Obsidian, transfer the knowing to knowledge.\n\u0026ldquo;Create Date\u0026rdquo; is the date and time when each row is created. This will tell me when did I snap the article in.\nImprove Now we have the table, by install the iOS or Android Notion app, click any share button and save the content to the Notion\u0026gt;Collection. All the Notion with the same account will update the table, and then start to do the close reading, transfer the knowledge, etc.\nThe table column also has sort and filter function. Please play around the followings:\n Add a \u0026ldquo;Read\u0026rdquo; column. Once the article is read, mark it. Filter the column \u0026ldquo;Read\u0026rdquo;, only display \u0026ldquo;Unread\u0026rdquo; items. Sort by \u0026ldquo;Create Date\u0026rdquo; Try the summary of columns, show the count, date duration, etc. Add new property for the data item per the need and it will apply to all the items.  ","id":5,"section":"posts","summary":"I have tried many different tools to organize the information collected online. The services like raindrop.io, App List, cubox, etc. They all have their own use cases and scenarios. And Cubox can support tags, date, sort, and other more functions. Comparing to these apps, Notion is a good replacement which can serve the collection very well.\nResult This is the view for my current inbox (Table View). The links are added to the inbox by sharing function from my iPhone when I browse the technical articles or news.","tags":["notion","collection"],"title":"Collection to Notion Inbox","uri":"https://icsteve.com/en/2020/12/collection_to_notion_inbox/","year":"2020"},{"content":"No English Version yet.\n","id":6,"section":"posts","summary":"No English Version yet.","tags":null,"title":"My Document Workflow (Tools)","uri":"https://icsteve.com/en/2020/01/document_flow/","year":"2020"},{"content":"No English Version.\n","id":7,"section":"posts","summary":"No English Version.","tags":["cad","framework"],"title":"CAD Framework： Principles from 90th","uri":"https://icsteve.com/en/2020/01/cad_framework/","year":"2020"},{"content":"No English Version.\n","id":8,"section":"posts","summary":"No English Version.","tags":["cad","framework","cloud"],"title":"CAD Framework: Cloud will change the game","uri":"https://icsteve.com/en/2020/01/cad_framework_cloud/","year":"2020"},{"content":"No English Version.\n","id":9,"section":"posts","summary":"No English Version.","tags":["cad","framework"],"title":"CAD Framework: Why Framework is hard to use in IC","uri":"https://icsteve.com/en/2020/01/cad_framework_deploy/","year":"2020"},{"content":"This is a terminal recording tool.\nEnjoy a lightweight, purely text-based approach to terminal recording.\nDeploymnet Make sure you have python3 installed.\nI will use \u0026ldquo;Run from source\u0026rdquo; approach.\n download source  git clone https://github.com/asciinema/asciinema.git cd asciinema pwd   set PYTHONPATH  for bash\nexport PYTHONPATH=`pwd` ;  setenv PYTHONPATH `pwd` ;   Create command alias  alias asciinema=\u0026quot;python3 -m asciinema \u0026quot;  alias asciinema 'python3 -m asciinema \\!*' ;  Recording asciinema rec test.cast  Display \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; type=\u0026quot;text/css\u0026quot; href=\u0026quot;http://icsteve.com/vendor/asciinema-player/asciinema-player.css\u0026quot; /\u0026gt; \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; type=\u0026quot;text/css\u0026quot; href=\u0026quot;http://icsteve.com/assert/default.css\u0026quot; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script\u0026gt; var args={}; args[\u0026quot;f\u0026quot;]=\u0026quot;test\u0026quot; ; if (typeof args[\u0026quot;f\u0026quot;]!==\u0026quot;undefined\u0026quot; \u0026amp;\u0026amp; args[\u0026quot;f\u0026quot;]!==null) { document.write(\u0026quot;\u0026lt;asciinema-player src=\\\u0026quot;assert/\u0026quot;+args[\u0026quot;f\u0026quot;]+\u0026quot;.cast\\\u0026quot; cols=\\\u0026quot;120\\\u0026quot; font-size=\\\u0026quot;16px\\\u0026quot; theme=\\\u0026quot;monokai\\\u0026quot;\u0026gt;\u0026lt;/asciinema-player\u0026gt;\u0026quot;) ; } else { document.write(\u0026quot;Please provide URL argument like: ?show=demo_name.\u0026quot;) ; } \u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;http://icsteve.com/vendor/asciinema-player/asciinema-player.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Showtime http://icsteve.com/demo/asciinema-player.html\n","id":10,"section":"posts","summary":"This is a terminal recording tool.\nEnjoy a lightweight, purely text-based approach to terminal recording.\nDeploymnet Make sure you have python3 installed.\nI will use \u0026ldquo;Run from source\u0026rdquo; approach.\n download source  git clone https://github.com/asciinema/asciinema.git cd asciinema pwd   set PYTHONPATH  for bash\nexport PYTHONPATH=`pwd` ;  setenv PYTHONPATH `pwd` ;   Create command alias  alias asciinema=\u0026quot;python3 -m asciinema \u0026quot;  alias asciinema 'python3 -m asciinema \\!","tags":["cad","asciinema"],"title":"Use Asciinema","uri":"https://icsteve.com/en/2020/01/cad_asciinema_deploy/","year":"2020"}],"tags":[{"title":"asciinema","uri":"https://icsteve.com/en/tags/asciinema/"},{"title":"cad","uri":"https://icsteve.com/en/tags/cad/"},{"title":"cloud","uri":"https://icsteve.com/en/tags/cloud/"},{"title":"collection","uri":"https://icsteve.com/en/tags/collection/"},{"title":"csh","uri":"https://icsteve.com/en/tags/csh/"},{"title":"english","uri":"https://icsteve.com/en/tags/english/"},{"title":"framework","uri":"https://icsteve.com/en/tags/framework/"},{"title":"notion","uri":"https://icsteve.com/en/tags/notion/"},{"title":"RUI","uri":"https://icsteve.com/en/tags/rui/"},{"title":"tree","uri":"https://icsteve.com/en/tags/tree/"},{"title":"youtube","uri":"https://icsteve.com/en/tags/youtube/"}]}