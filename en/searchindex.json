{"categories":[{"title":"CAD","uri":"https://icsteve.com/en/categories/cad/"},{"title":"English","uri":"https://icsteve.com/en/categories/english/"},{"title":"HMC","uri":"https://icsteve.com/en/categories/hmc/"},{"title":"Notion","uri":"https://icsteve.com/en/categories/notion/"},{"title":"RUI","uri":"https://icsteve.com/en/categories/rui/"}],"posts":[{"content":"ICSteve 知识星球 半月会 (HMC - Half Moon Collection)，欢迎关注ICSteve 知识星球 （https://t.zsxq.com/eqr72RB）。半月会每半个月总结星球中的推送集合成册，一个月两期。加入星球可以看到更多互动讨论，向星主提问，以及获得实际的实践分享和点评。\nCAD | 工技  开始使用Notion，分享使用Notion的一些技巧以及自建一些模板。写了第一篇分享：利用Notion 收集想法 Hugo 构建的网站 http://icsteve.com 将现有模板改造成双语支持。 立项cshinate，准备构建一个cshell 最佳实践集合。连载第一，第二篇：Csh 选项 使用tree 命令展示文件结构 Vim 可以使用 q 来录制 macro 到 register，然后使用@ 来调用寄存器中的内容。之后会发一个分享，在IC 工作环境中高效使用 Vim 与Macro。#博文计划 想想Server 工作中你一天需要输入多少次密码，或者多少次其他固定的code？如果超过0次，了解下expect，tcl 的一个处理交互的库。 终端或者shell 脚本里如何打印或者处理json？当属使用工具jq，用处不仅仅在于显示json，更多的是如何把json 作为一个数据源用jq 粘合起来，正在做的cshinate （csh 的最佳实践集合）对口json 的工具就是jq，赋能json 就需要把jq 用得恰到好处。 有些sh 脚本包含敏感信息，需要加密，专门的工具门槛太高？试试 gzexe，可防君子，不防小人。 周期性的工作可以交给Crontab 来做，如果没有建crontab 的权限呢，tmux 和 while 配合run 一个常驻系统的脚本。为了防止被系统kill，也许需要设置定时重启。 原来git 也可以设置内部的alias，主要是利用了\u0026quot;git config \u0026ndash;global alia\u0026quot;，有一定用处，但是我觉得是不如shell 的alias 来得灵活哦，比如alias gitci \u0026ldquo;git add . ; git commit -am !* ; git push\u0026rdquo;。 有时候要做测试，有时候要想从一个terminal 控制另一个terminal，怎么实现呢，开始使用tmux 吧，Tmux 还可以做同屏演示。 手动输入zoom meeting ID and Password 太费时间，这个小工具可以生成电脑端和移动端的URL，省不少时间有没有😉 https://www.skyzh.dev/zoom-url-generator/ 平时用grep 可能不怎么带参数，其实很多参数是很好用的，比如  n 显示行号 -A 5 显示上下文，after 5 lines -B 5 显示上下文，before 5 lines -C 5 显示上下文，both before and after 5 lines    CAD | 积累  Google Open Source PDK: https://github.com/google/skywater-pdk Know the format TOML: https://github.com/toml-lang/toml https://www.maxar.com/ 公司和他们的产品了解下。未来是属于数据驱动的，CAD 是数据驱动的Interface。 开源综合工具 https://github.com/YosysHQ/yosys 开源时序分析工具 https://github.com/OpenTimer/OpenTimer 这个网站应该是ASIC 设计前端同学很了解的一个网站吧，准备刷刷这个网站，我也想建一个数字后端实现和CAD 的类似网站。 http://hdlbits.01xz.net  CAD | 进阶 1. 如何对工具“假装”了如指掌 多看几遍Datasheet，Command Reference 以及创建自己的Test Case，多实践，你就是一本活的工具手册，东西看多了，你的境界会由质变提升的，敢不敢坚持试试？\n2. 流畅的远程演示Tips 现在远程办公，远程会议频次越来越高，当你在显示PPT 或者proposal 的时候，怎么看起来流畅呢？\n 调整颜色，以浅色背景（白色或浅绿色），调整xterm 为浅绿色背景，黑色文字 调整字体大小，现在高分屏越来越普遍，保证有比较大的字体，即使在网络不佳时也不会有太大影响 删除动画，如果不是marketing 相关的 presentation 打开文件默认显示行号，方便交流 文件的字体大小我要放大相比平时自己工作 善用 tmux 管理terminal 窗口 善用 tree 等命令展示文件结构 善用meld，tkdiff，gitdiff 等工具比较文件  3. 讨论可以活跃思维 大家觉得在数字芯片设计中，各个分领域，比较基础的技能是什么，无论是数字前端，数字后端还是CAD？\nCAD | 观点 1. CAD 与加班 加班的在任何行业都存在，建筑工人几天内造出医院，软件Release 阶段的加班，硬件Tapeout 最后要冲刺。 如果事情可以并行，是不是就不需要加班了？并非如此，事情并行后，同样的目标消耗的资源成本提高了，在某种条件下（加班），成本最低。 ICCAD 的目标是提高效率，某些情况下有了CAD的帮助，摸摸鱼，降低自己的工作强度。 ICCAD 还有一个好处在于CAD 可以涉猎更多的领域，强化自己的护城河，增强自己的不可或缺性。\n2. 使用API 是CAD 基本功 无论什么框架，什么系统都变得越来越封闭，像Android这种开源的系统，用户得到的是百花，每种花都有好有坏。 那CAD 可以应对什么呢？数据接口将会越来越开放，访问数据的能力也是CAD的一个基本功。\n3. ICSteve 要分享什么 单纯讲CAD 和IC 的总结知识，也可有很多分享与输出。 做了多年的CAD 后我发现有几类能力是可以显著提高designer的工作效率和体验。\n开发环境的持续优化 基础知识的模块化，实例化，数据化，工具化\nknowledge is a treasure but practice is the key\n4. CAD 与软件开发 做软件和做CAD 有些许不同，CAD 从硬件角度出发，兼顾项目管理，正确处理workaround 或tradoff等，如果想对CAD 进一步，我的建议是同时做向上管理和向下管理，向上走通架构和参与管理层面的CAD 决策，向下了解硬件项目的组织架构和瓶颈，提供解决方案。\n5. 芯片设计上云 关键就是一个\u0026quot;省\u0026quot;字，要么省时间，缩短Time to Market，要么省成本，减少peak usage带来的成本增加。上云以后数据的使用权，你的设计是否会成为被学习的样本等问题都需要考虑。上云了也许有些岗位会被缩减，也有一些岗位会新增，比如云数据的交互(学习些容器技术，网络技术总有溢处)。\n","id":0,"section":"posts","summary":"ICSteve 知识星球 半月会 (HMC - Half Moon Collection)，欢迎关注ICSteve 知识星球 （https://t.zsxq.com/eqr72RB）。半月","tags":null,"title":"ICSteve 半月会（2021.01-上）","uri":"https://icsteve.com/en/2021/01/icsteve_hmc_2020_01_a/","year":"2021"},{"content":"ICSteve 半月会（2021.01-下） ICSteve 知识星球 半月会 (Half Moon Collection)，欢迎关注ICSteve 知识星球 （https://t.zsxq.com/eqr72RB），分类精简为两类，第一类是实实在在的工具和技能分享，第二类是经过我的个人思维加工的观点。\nCAD | 工技  如何把当前vim 寄存器的内容存下来以便写成script 呢？  ,qp \u0026lt;leader\u0026gt;\u0026lt;register name\u0026gt;p  一个vim 插件的集合网站，如果你是vim 用户的话，有空可以随便浏览浏览。   Vim Awesome  Vim 中需要搜索匹配多个Pattern，用\\ escape | 就可以了。  :norm /Pattern1\\|Pattern2  Python 多用于设计前端，最近有空开始关注python + VLSI 了，不知道有没有人在用这个呢？   MyHDL  direnv 是一个可以切换work env的工具，使用很方便，很多编程语言都有自己的工具，比如python 有conda。   direnv – unclutter your .profile | direnv Conda — conda 4.9.2.post24 e37cf84a documentation   有很多商业的工具可以辅助你来设计约束，检查约束，比较约束，产品我就不一一列举了。 我要说的是，如果作为CAD，可以去玩一玩 sdcparser。\n  IP 管理：很多时候，如果你是前端后端的module designer, 当你开始工作的时候，std library，ip library 等已经ready，所有需要的view 都是ready to use。CAD 的工作之一就是管理这些IP 和产生整个ASIC 流程需要的views，并确保tapeout 的时候各个IP 都是legal 的。\n  当你run EDA job的时候，屏幕scrolling fast，或许你已经知道，可以使用\u0026quot;Ctrl+s\u0026quot; 来freeze a terminal window，需要恢复时\u0026quot;Ctrl+q\u0026quot;\n  你平时用哪种\u0026quot;命名方式\u0026quot;比较多？\n   Camel Case (ex: aprVar, aprProc, aprPackage). Pascal Case (ex: AprVar, AprProc, AprPackage). Underscores (ex: apr_var, apr_proc, apr_package).   平时工作中查看搜索屏幕上Terminal 的stdout log，用得比较多的应该是tee 和直接看eda 的log file。tmux 可以直接搜索，进入copy-mode，先按ctrl-b 然后[ ，如果是vi key binding，可以用/或者?，向下或向上，如果是emacs key binding，则用其相应的快捷键。\n  有很多可以生成文档的工具，现在很多小工具都支持Markdown，如果你也喜欢用Markdown 来写技术文档，试试\u0026quot;docsify\u0026quot;：\n   docsify  很久前在逛Reddit 的时候发现这个，这个其实很有用，可以作为一个CAD 的学习实践例子。   EDAV | Online EDA Viewer   有时候Unix X desktop 上有一个窗口无响应，ps or top出来可能有其他太多类似的program，比如很多terminals，这时可以运行\u0026quot;xkill\u0026quot; 并用鼠标点选无响应窗口。\n  作为一个CAD，开发公司的，团队的流程，开发一些Utilities，Program，Platform，版本管理很重要，很多公司都用git，由公司IT 维护，或者商业的工具交钱得到技术支持。作为CAD，对版本管理一定要有强烈的感知，维护好自己的每一次check-in，熟练使用git 来管理你的流程脚本，可以试试\u0026quot;gogs\u0026quot;，这个是我一开始给自己用的，练习如何去管理一个大型的代码版本管理，解决依赖关系，并写一些脚本辅助release 等等。\n   Gogs: A painless self-hosted Git service  有时候你要把几个命令组合起来用，有几种方法，tcl 是一个不错的glue language，或者其他脚本语言，也都方便不需要编译，还有一个选择是直接用 csh 的alias command，其他shell 类似的。重点来了，可以使用 \u0026ldquo;!*\u0026quot;，\u0026rdquo;!:\u0026ldquo;来access 命令参数。  alias mycmd \u0026quot;echo \\!* ;\\\\ echo this is a long command \\!:1 ; \\\\ echo this is a very long command \\!:2 ;\u0026quot;   如果，你对数据库不是那么熟悉，又苦于入门有点困难，在编写script 又想使用数据库，或者数据集：解决万事开头难的问题，使用“csv“，并慢慢深入了解，这个也是一个不止好而已，是非常好的一个数据集格式，在某种情况下而且是首选。\n  很多时候我们使用\u0026quot;tee\u0026rdquo; 命令来写出screen log，多个命令是不是要用多个tee 然后再cat 在一起呢？非也，tee 也有append 功能，使用 \u0026ldquo;tee -a\u0026rdquo;。\n  很多时候写cshell script 要用 pipe + tee，很随手就是\u0026quot;./foo | tee foo.log\u0026quot;，这个只写出 stdout，而没有 srderr，需要debug 的时候错误信息在foo.log 中没有，应该随手写成这样\n  ./foo 2\u0026gt;\u0026amp;1 | tee foo.log Or ./foo |\u0026amp; tee foo.log  CAD | 观点 1. 做IC 还是转CS 做IC 还是转CS，这个命题每年都会被提起，因为每年都有同学面临这样的选择。IC 是不是夕阳产业，这个要分着讲，从设计实现是的，从应用，集成角度就不一定，换句话说好比苹果公司，制作一部手机所有的技术都是成熟的，但苹果每年都能，也都要做出不一样来。如果你对IC 感兴趣，IC 还是有得做的，只要这个行业不消失，还是有人力需求的；说到CS 是不是更有前途，我个人的观点是的，信息时代最大的行业可能就是软件行业了，可是注意，任何行业职位都有底层和顶层，CS 如此，IC 也不例外。\n2. 学习Tcl 的又一个原因 一个学习tcl 的动力: 很多脚本语言都支持tk GUI 编程，所以学会tcl/tk，你就学会了一门GUI 语言，外加tcl 几乎是IC 的最重要Interface 语言。\n3. 版权意识 看到好多好的分享，但是每次看到一些东西，我的第一个问题确是，这个可以用以传播吗？作为自己的笔记可能没有问题，我放弃了一些专业知识上分享的切入点，转而分享普识，我看到的很多文章分享是没有问题的，只不过需要注意一下：今天你如何保护他人的知识产权，明天他人也会尊重你的知识产权。\n4. CAD 技能树之PDK CAD 技能树：掌握PDK 的结构以及每个文件的作用，并熟悉各个文件如何使用。\n作为CAD 工程师，很多时候都是在和数据打交道，其中之一就是foundry 提供的PDK，全称Process Design Kit，是对特定半导体制造工艺的建模，利用PDK 中提供的模型，加上买的EDA，可以进行芯片的设计，包括但不限于：technology file, design rule, spice\u0026hellip; 不仅有学术界免费的PDK，也有Google 开源的pdk，学习CAD 又多了一条路。CAD 技能树：掌握PDK 的结构以及每个文件的作用，并熟悉各个文件如何使用。\n5. Timing Uncertainty （1 \u0026amp; 2） 提问：芯片设计约束中设置timing uncertainty 的目的是什么？如何设置？ 回答：在我刚接触约束的时候，我是做Logical Synthesis 和STA 的，那时还是65nm，约束不是那么复杂，经验值就好了，我给老师提过这个类似的问题，回答总是\u0026quot;经验\u0026quot;，那经验是怎么来的呢？接触越来越多后，从STA，APR 到CAD，我的想法在变化。\n综述，uncertainty 设置顾名思义就是用来cover 整个流程中出现的uncertainty，不同阶段需要考虑的uncertainty 不同，一般是为downstream work 预留时序空间。\n我们从后往前举例，先举STA timing signoff 设置来自于foundry 的工艺不确定性，一般是工艺厂商对于工艺生产线做调试的时候得出的，比如ocv。还包括不同产品实测回来的一些经验，产品对良率，DFT 测试，工作环境，aging 等一系列产品自身的考虑。\n当然STA 还有不少其他的因素可能影响uncertainty 设置，比如STA 的精确性，PBA vs GBA，给SI 或者transition 预留的余量等。\n接下来说说Routing，越往前的步骤所需要的uncertainty 需要包含后续步骤的值加上自己本步骤需要考虑的一些问题，routing 的uncertainty 主要cover global routing 与 real routing 之间的gap，EDA 工具在不断提高virtual routing 精度以及缩小其与real routing 之间的差距。具体来说就比较多了（不考虑detour 或者congestion 等问题触发的大delay），举一个偏一点的例子，由于routing 后对path delay 影响比较virtual 的会有变长或者变短，加上ocv，这个值在几个iteration 里是可以估计出来的，经验值之一。\n未完待续\n6. 对知识要能『指手画脚』 最近发现某些CAD 工程师对资源的理解不开阔，大多时候人的资源要远盛过硬件资源，除了会找到正确的人，之前至少要对自己相关工作的上下游一级dependency 要达到使用（use）的级别，我看到很多人只停留在知道（know）的级别，背后的原因是用了你才能更好地提问与交流。\n从CAD 的工作来说，我觉着在familiar（熟悉）和 master（掌握）之前还有一个可以去深入的技能guide（指导），这里的指导并不是要去指手画脚，而是你知道他应该是什么样子，一种对预期的把控，更深入些，如果有错了，你可以知道什么原因导致的。\n7. IC 的最基础知识之我见 之前我提了一个互动问题，大家觉得IC 无论是前端，后端，还是CAD，最主要的基本技能是什么？ 我的答案是Timing。我觉得timing 是基础，因为在我看来它是实现功能最基本基本的东西，也是硬件区别软件开发的一个坎，围绕timing 的知识很多。我打个比喻，要实现IC 知识的温饱，Timing 要懂，然后小康可以看看Power 啥的，富裕就要另外一个方法论了，High Performance，Low Power等。\n8. GameStop 的大戏 GameStop 的大戏很精彩，社交媒体的力量在不断的放大，在某些上层经济利益既得者书写的规则下产生出了反噬。你的投资也可以用上CAD 来做些简单的分析和追踪。\n","id":1,"section":"posts","summary":"ICSteve 半月会（2021.01-下） ICSteve 知识星球 半月会 (Half Moon Collection)，欢迎关注ICSteve 知识星球 （https://t.zsxq.co","tags":null,"title":"ICSteve 半月会（2021.01-下）","uri":"https://icsteve.com/en/2021/01/icsteve_hmc_2020_01_b/","year":"2021"},{"content":"tree command is helping to show the structure of folders and files.\nReal Case When discussing the folder structure via video meeting, express the structure is a little bit challenge if we have a lot of levels and files. How to make the folder and file structure clear when we present something?\n. means in current dir. and we can use pwd to replace it.\n➜ tree -a --dirsfirst . ├── test -\u0026gt; test_3 ├── test_1 │ └── file_1 ├── test_2 │ └── file_2 ├── test_3 │ └── file_3 └── .conf 4 directories, 4 files ➜ tree `pwd` -a --dirsfirst /Users/steve/demo ├── test -\u0026gt; test_3 ├── test_1 │ └── file_1 ├── test_2 │ └── file_2 ├── test_3 │ └── file_3 └── .conf 4 directories, 4 files  Understand Let\u0026rsquo;s first see the tree command help:\n➜ ~ tree --help usage: tree [-acdfghilnpqrstuvxACDFJQNSUX] [-H baseHREF] [-T title ] [-L level [-R]] [-P pattern] [-I pattern] [-o filename] [--version] [--help] [--inodes] [--device] [--noreport] [--nolinks] [--dirsfirst] [--charset charset] [--filelimit[=]#] [--si] [--timefmt[=]\u0026lt;f\u0026gt;] [--sort[=]\u0026lt;name\u0026gt;] [--matchdirs] [--ignore-case] [--fromfile] [--] [\u0026lt;directory list\u0026gt;] ------- Listing options ------- -a All files are listed. -d List directories only. -l Follow symbolic links like directories. -f Print the full path prefix for each file. -x Stay on current filesystem only. -L level Descend only level directories deep. -R Rerun tree when max dir level reached. -P pattern List only those files that match the pattern given. -I pattern Do not list files that match the given pattern. --ignore-case Ignore case when pattern matching. --matchdirs Include directory names in -P pattern matching. --noreport Turn off file/directory count at end of tree listing. --charset X Use charset X for terminal/HTML and indentation line output. --filelimit # Do not descend dirs with more than # files in them. --timefmt \u0026lt;f\u0026gt; Print and format time according to the format \u0026lt;f\u0026gt;. -o filename Output to file instead of stdout. ------- File options ------- -q Print non-printable characters as '?'. -N Print non-printable characters as is. -Q Quote filenames with double quotes. -p Print the protections for each file. -u Displays file owner or UID number. -g Displays file group owner or GID number. -s Print the size in bytes of each file. -h Print the size in a more human readable way. --si Like -h, but use in SI units (powers of 1000). -D Print the date of last modification or (-c) status change. -F Appends '/', '=', '*', '@', '|' or '\u0026gt;' as per ls -F. --inodes Print inode number of each file. --device Print device ID number to which each file belongs. ------- Sorting options ------- -v Sort files alphanumerically by version. -t Sort files by last modification time. -c Sort files by last status change time. -U Leave files unsorted. -r Reverse the order of the sort. --dirsfirst List directories before files (-U disables). --sort X Select sort: name,version,size,mtime,ctime. ------- Graphics options ------- -i Don't print indentation lines. -A Print ANSI lines graphic indentation lines. -S Print with CP437 (console) graphics indentation lines. -n Turn colorization off always (-C overrides). -C Turn colorization on always. ------- XML/HTML/JSON options ------- -X Prints out an XML representation of the tree. -J Prints out an JSON representation of the tree. -H baseHREF Prints out HTML format with baseHREF as top directory. -T string Replace the default HTML title and H1 header with string. --nolinks Turn off hyperlinks in HTML output. ------- Input options ------- --fromfile Reads paths from files (.=stdin) ------- Miscellaneous options ------- --version Print version and exit. --help Print usage and this help message and exit. -- Options processing terminator.  I will show some flags' usage which I am using a lot. The options are very similar to the ls command.\n-a, list all the files including the hidden files. In the CAD development, some files are for debugging purpose or for one-time configuration, and they are hidden. To list the hidden files, -a must be present.\n-d, only list the folder, In some cases, the file list is huge but we only care about the folder structure. The folder will tell the clear structure\n-L, controls the levels, sometimes, I don\u0026rsquo;t want to dive into all the folder levels and I only want to show 2 levels, then use -L 2.\n-t, sort by last modified time. The flag is useful because when we want to see some new files generated recently, we can easily find them at the end of the tree view.\nAnother useful function is HTML or JSON output. In these days, HTML document is very popular and we can use tree to output the html code or json file to use them in our web applications.\nImprovement or Exercises Please try below commands and see the output.\nmkdir tree_demo cd tree_demo mkdir -p demo_1 demo_2 demo_3 demo_4 demo_5 touch demo_1/file_1 demo_2/file_2_1 demo_2/file_2_2 demo_3/file_3 demo_5/file_5 touch .demo_6 tree `pwd` tree `pwd` -a tree `pwd` -a --dirsfirst touch demo_2/file_2_2 tree `pwd` -a -t --dirsfirst tree `pwd` -a -t -L 1 --dirsfirst tree `pwd` -a -t -d -L 1 --dirsfirst  ","id":2,"section":"posts","summary":"tree command is helping to show the structure of folders and files.\nReal Case When discussing the folder structure via video meeting, express the structure is a little bit challenge if we have a lot of levels and files. How to make the folder and file structure clear when we present something?\n. means in current dir. and we can use pwd to replace it.\n➜ tree -a --dirsfirst . ├── test -\u0026gt; test_3 ├── test_1 │ └── file_1 ├── test_2 │ └── file_2 ├── test_3 │ └── file_3 └── .","tags":["RUI","csh","tree"],"title":"Use tree command to list the structure","uri":"https://icsteve.com/en/2021/01/tree_command/","year":"2021"},{"content":"This is a website to help on the English pronunciation.\nYouglish : https://youglish.com\nThe website will pick a lot of youtube videos which includes the words we searched. You will see it shows up 1951 videos and now is currently playing the 4th one.\nThis is quite useful because not like the dictionary, the video will not only tell you how the word is pronounced, but also tell you when it is used via video, not just a sentence. So if you are interested, you can finish the entire story.\nEspecially for a lot of technical and other domains' words, you can always find the proper conversation and scenario in youtube. It is a very good material to help you memory the word and its pronunciation.\n","id":3,"section":"posts","summary":"This is a website to help on the English pronunciation.\nYouglish : https://youglish.com\nThe website will pick a lot of youtube videos which includes the words we searched. You will see it shows up 1951 videos and now is currently playing the 4th one.\nThis is quite useful because not like the dictionary, the video will not only tell you how the word is pronounced, but also tell you when it is used via video, not just a sentence.","tags":["english","youtube"],"title":"English pronunciation helper: youglish.com","uri":"https://icsteve.com/en/2020/12/youglish/","year":"2020"},{"content":"Case Study There is a cshell script file which is working in others' environment but not in yours, one of prossibilities is that the cshell will load the unit cshell file ~/.cshrc( cshrc). So there might be some setting in others' .cshrc files, but not in yours.\nUnderstand In Unix-like system, when you want to get the help of one program from Command Line Interface (CLI), we can try the following ways, like csh.\n man csh csh \u0026ndash;help  ➜ ~ csh --help tcsh 6.18.01 (Astron) 2012-02-14 (x86_64-apple-darwin) options wide,nls,dl,bye,al,kan,sm,rh,color,filec -b file\tbatch mode, read and execute commands from `file' -c command\trun `command' from next argument -d\tload directory stack from `~/.cshdirs' -Dname[=value]\tdefine environment variable `name' to `value' (DomainOS only) -e\texit on any error -f\tstart faster by ignoring the start-up file -F\tuse fork() instead of vfork() when spawning (ConvexOS only) -i\tinteractive, even when input is not from a terminal -l\tact as a login shell, must be the only option specified -m\tload the start-up file, whether or not owned by effective user -n file\tno execute mode, just check syntax of the following `file' -q\taccept SIGQUIT for running under a debugger -s\tread commands from standard input -t\tread one line from standard input -v\techo commands after history substitution -V\tlike -v but including commands read from the start-up file -x\techo commands immediately before execution -X\tlike -x but including commands read from the start-up file --help\tprint this message and exit --version\tprint the version shell variable and exit See the tcsh(1) manual page for detailed information.  If you are looking for parameter instead of argument, go to this page parameter.\nSometimes, we will see a cshell script which starts with /usr/bin/env csh -fx, this means using csh to execute, and when launching csh, ignore the start-up file (cshrc) and always print out the command before execution.\nIf cshell is not the default shell, launch the cshell by typing csh (in case cshell is not installed, we can install csh quit easily in most of platforms - google install csh).\nIf we want to write a Cabell executable file, here is the example:\n#!/usr/bin/env tcsh echo \u0026quot;This is my first csh example\u0026quot; ; exit ;  Save the content into a file named demo_001.csh.\nRun the following commands:\nchmod +x demo_001.csh ./demo_001.csh  The first line of an executable file starting with #! is (on Linux) interpreted by the Linux kernel inside the implementation of execve system call (which is invoked, after fork, by the shell for most commands - those that are not functions and not shell builtins).\nAbout \u0026ldquo;Hash-Bang\u0026rdquo; or \u0026ldquo;Shebang\u0026rdquo;, refer to this wiki page - SheBang (Unix).\nExercises  Get the help of csh on your own machine. Check the version of csh. Write a csh program file and print out \u0026ldquo;Hello World\u0026rdquo;.  Links  Google Search: csh install Wiki Page: Shebang (Unix) Knowledge Link: cshrc  ","id":4,"section":"posts","summary":"Case Study There is a cshell script file which is working in others' environment but not in yours, one of prossibilities is that the cshell will load the unit cshell file ~/.cshrc( cshrc). So there might be some setting in others' .cshrc files, but not in yours.\nUnderstand In Unix-like system, when you want to get the help of one program from Command Line Interface (CLI), we can try the following ways, like csh.","tags":null,"title":"Csh Argument","uri":"https://icsteve.com/en/2020/12/csh_argument/","year":"2020"},{"content":"I have tried many different tools to organize the information collected online. The services like raindrop.io, App List, cubox, etc. They all have their own use cases and scenarios. And Cubox can support tags, date, sort, and other more functions. Comparing to these apps, Notion is a good replacement which can serve the collection very well.\nResult This is the view for my current inbox (Table View). The links are added to the inbox by sharing function from my iPhone when I browse the technical articles or news. And they are also from my EDGE browser on MAC or PC. When I browse online for news or technical topic, or work related items, I will simply click share the link and put them to the Notion/Inbox.\nThe table in Notion is a type of database, so we can add any column we want. I added one checkbox column called \u0026ldquo;To Obsidian\u0026rdquo; (Check Notion and Obsidian), tags and create date. At the bottom, for each column, we can also define the summary for each column.\nSwitch to Gallery View\nUnderstand Now let\u0026rsquo;s try to build the Inbox page in your Notion. In the Inbox or Collection, you can put anything you want, an article link, an apple store app link, a piece of idea, a text message, and so on. This is easy to be done by just click the share button on the smart phone. Since we are building a read later database, so we can put any property we want to each item. I have uninstalled several apps in my iPhone, what about you?\nCreate a new page Click the \u0026ldquo;+\u0026rdquo; button next to the WORKSPACE or PRIVATE. And then give the new page a name, for instance, \u0026ldquo;Inbox\u0026rdquo; or \u0026ldquo;Collection\u0026rdquo;.\nAdd \u0026ldquo;Table\u0026rdquo; database Create a table for the new page\nThen you will get an empty page like this.\nCustomize Columns Now, we can define the columns in our collection table. I want to add 2 more columns, one is \u0026ldquo;To Obsidian\u0026rdquo; and another one is \u0026ldquo;Create Date\u0026rdquo;.\n\u0026ldquo;To Obsidian\u0026rdquo; is a checkbox to tell which would be going to the Obsidian, transfer the knowing to knowledge.\n\u0026ldquo;Create Date\u0026rdquo; is the date and time when each row is created. This will tell me when did I snap the article in.\nImprove Now we have the table, by install the iOS or Android Notion app, click any share button and save the content to the Notion\u0026gt;Collection. All the Notion with the same account will update the table, and then start to do the close reading, transfer the knowledge, etc.\nThe table column also has sort and filter function. Please play around the followings:\n Add a \u0026ldquo;Read\u0026rdquo; column. Once the article is read, mark it. Filter the column \u0026ldquo;Read\u0026rdquo;, only display \u0026ldquo;Unread\u0026rdquo; items. Sort by \u0026ldquo;Create Date\u0026rdquo; Try the summary of columns, show the count, date duration, etc. Add new property for the data item per the need and it will apply to all the items.  ","id":5,"section":"posts","summary":"I have tried many different tools to organize the information collected online. The services like raindrop.io, App List, cubox, etc. They all have their own use cases and scenarios. And Cubox can support tags, date, sort, and other more functions. Comparing to these apps, Notion is a good replacement which can serve the collection very well.\nResult This is the view for my current inbox (Table View). The links are added to the inbox by sharing function from my iPhone when I browse the technical articles or news.","tags":["notion","collection"],"title":"Collection to Notion Inbox","uri":"https://icsteve.com/en/2020/12/collection_to_notion_inbox/","year":"2020"},{"content":"No English Version yet.\n","id":6,"section":"posts","summary":"No English Version yet.","tags":null,"title":"My Document Workflow (Tools)","uri":"https://icsteve.com/en/2020/01/document_flow/","year":"2020"},{"content":"No English Version.\n","id":7,"section":"posts","summary":"No English Version.","tags":["cad","framework"],"title":"CAD Framework： Principles from 90th","uri":"https://icsteve.com/en/2020/01/cad_framework/","year":"2020"},{"content":"No English Version.\n","id":8,"section":"posts","summary":"No English Version.","tags":["cad","framework","cloud"],"title":"CAD Framework: Cloud will change the game","uri":"https://icsteve.com/en/2020/01/cad_framework_cloud/","year":"2020"},{"content":"No English Version.\n","id":9,"section":"posts","summary":"No English Version.","tags":["cad","framework"],"title":"CAD Framework: Why Framework is hard to use in IC","uri":"https://icsteve.com/en/2020/01/cad_framework_deploy/","year":"2020"},{"content":"This is a terminal recording tool.\nEnjoy a lightweight, purely text-based approach to terminal recording.\nDeploymnet Make sure you have python3 installed.\nI will use \u0026ldquo;Run from source\u0026rdquo; approach.\n download source  git clone https://github.com/asciinema/asciinema.git cd asciinema pwd   set PYTHONPATH  for bash\nexport PYTHONPATH=`pwd` ;  setenv PYTHONPATH `pwd` ;   Create command alias  alias asciinema=\u0026quot;python3 -m asciinema \u0026quot;  alias asciinema 'python3 -m asciinema \\!*' ;  Recording asciinema rec test.cast  Display \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; type=\u0026quot;text/css\u0026quot; href=\u0026quot;http://icsteve.com/vendor/asciinema-player/asciinema-player.css\u0026quot; /\u0026gt; \u0026lt;link rel=\u0026quot;stylesheet\u0026quot; type=\u0026quot;text/css\u0026quot; href=\u0026quot;http://icsteve.com/assert/default.css\u0026quot; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;script\u0026gt; var args={}; args[\u0026quot;f\u0026quot;]=\u0026quot;test\u0026quot; ; if (typeof args[\u0026quot;f\u0026quot;]!==\u0026quot;undefined\u0026quot; \u0026amp;\u0026amp; args[\u0026quot;f\u0026quot;]!==null) { document.write(\u0026quot;\u0026lt;asciinema-player src=\\\u0026quot;assert/\u0026quot;+args[\u0026quot;f\u0026quot;]+\u0026quot;.cast\\\u0026quot; cols=\\\u0026quot;120\\\u0026quot; font-size=\\\u0026quot;16px\\\u0026quot; theme=\\\u0026quot;monokai\\\u0026quot;\u0026gt;\u0026lt;/asciinema-player\u0026gt;\u0026quot;) ; } else { document.write(\u0026quot;Please provide URL argument like: ?show=demo_name.\u0026quot;) ; } \u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;http://icsteve.com/vendor/asciinema-player/asciinema-player.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Showtime http://icsteve.com/demo/asciinema-player.html\n","id":10,"section":"posts","summary":"This is a terminal recording tool.\nEnjoy a lightweight, purely text-based approach to terminal recording.\nDeploymnet Make sure you have python3 installed.\nI will use \u0026ldquo;Run from source\u0026rdquo; approach.\n download source  git clone https://github.com/asciinema/asciinema.git cd asciinema pwd   set PYTHONPATH  for bash\nexport PYTHONPATH=`pwd` ;  setenv PYTHONPATH `pwd` ;   Create command alias  alias asciinema=\u0026quot;python3 -m asciinema \u0026quot;  alias asciinema 'python3 -m asciinema \\!","tags":["cad","asciinema"],"title":"Use Asciinema","uri":"https://icsteve.com/en/2020/01/cad_asciinema_deploy/","year":"2020"}],"tags":[{"title":"asciinema","uri":"https://icsteve.com/en/tags/asciinema/"},{"title":"cad","uri":"https://icsteve.com/en/tags/cad/"},{"title":"cloud","uri":"https://icsteve.com/en/tags/cloud/"},{"title":"collection","uri":"https://icsteve.com/en/tags/collection/"},{"title":"csh","uri":"https://icsteve.com/en/tags/csh/"},{"title":"english","uri":"https://icsteve.com/en/tags/english/"},{"title":"framework","uri":"https://icsteve.com/en/tags/framework/"},{"title":"notion","uri":"https://icsteve.com/en/tags/notion/"},{"title":"RUI","uri":"https://icsteve.com/en/tags/rui/"},{"title":"tree","uri":"https://icsteve.com/en/tags/tree/"},{"title":"youtube","uri":"https://icsteve.com/en/tags/youtube/"}]}